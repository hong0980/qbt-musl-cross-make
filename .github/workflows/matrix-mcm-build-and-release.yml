name: qbt-mcm build and release

on:
  workflow_dispatch:

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Host - wget musl-cross-make
        run: wget -qO musl-cross-make.tar.gz https://git.zv.io/toolchains/musl-cross-make/-/archive/musl.cc/musl-cross-make-musl.cc.tar.gz

      - name: "Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: musl-cross-make-archive
          path: musl-cross-make.tar.gz

  build:
    needs: bootstrap
    runs-on: ubuntu-latest
    container:
      image: alpine:edge
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        arch_type:
          [
            aarch64-linux-musl,
            arm-linux-musleabi,
            arm-linux-musleabihf,
            armv6-linux-musleabihf,
            armv7l-linux-musleabihf,
            i686-linux-musl,
            x86_64-linux-musl,
            mips-linux-musl,
            mipsel-linux-musl,
            mips64-linux-musl,
            mips64el-linux-musl,
            powerpc-linux-musl,
            powerpc64le-linux-musl,
            s390x-linux-musl,
            riscv64-linux-musl,
          ]

        include:
          - arch_type: "aarch64-linux-musl"
            arch_config: "--with-arch=armv8-a --with-abi=lp64"

          - arch_type: "arm-linux-musleabi"
            arch_config: "--with-arch=armv5te --with-tune=arm926ej-s --with-float=soft --with-abi=aapcs-linux"

          - arch_type: "arm-linux-musleabihf"
            arch_config: "--with-arch=armv6zk --with-tune=arm1176jzf-s --with-fpu=vfp --with-float=hard --with-abi=aapcs-linux"

          - arch_type: "armv6-linux-musleabihf"
            arch_config: "--with-arch=armv6zk --with-tune=arm1176jzf-s --with-fpu=vfp --with-float=hard --with-abi=aapcs-linux"

          - arch_type: "armv7l-linux-musleabihf"
            arch_config: "--with-arch=armv7-a --with-tune=generic-armv7-a --with-fpu=vfpv3-d16 --with-float=hard --with-abi=aapcs-linux --with-mode=thumb"

          - arch_type: "i686-linux-musl"
            arch_config: "--with-arch=i686 --with-tune=generic --enable-cld"

          - arch_type: "x86_64-linux-musl"
            arch_config: ""

          - arch_type: "mips-linux-musl"
            arch_config: "--with-arch=mips32 --with-mips-plt --with-float=soft --with-abi=32"

          - arch_type: "mipsel-linux-musl"
            arch_config: "--with-arch=mips32 --with-mips-plt --with-float=soft --with-abi=32"

          - arch_type: "mips64-linux-musl"
            arch_config: "--with-arch=mips3 --with-tune=mips64 --with-mips-plt --with-float=soft --with-abi=64"

          - arch_type: "mips64el-linux-musl"
            arch_config: "--with-arch=mips3 --with-tune=mips64 --with-mips-plt --with-float=soft --with-abi=64"

          - arch_type: "powerpc-linux-musl"
            arch_config: "--enable-secureplt --enable-decimal-float=no"

          - arch_type: "powerpc64le-linux-musl"
            arch_config: "--with-abi=elfv2 --enable-secureplt --enable-decimal-float=no --enable-targets=powerpcle-linux"

          - arch_type: "s390x-linux-musl"
            arch_config: "--with-arch=z196 --with-tune=zEC12 --with-zarch --with-long-double-128 --enable-decimal-float"

          - arch_type: "riscv64-linux-musl"
            arch_config: "--with-arch=rv64gc --with-abi=lp64d --enable-autolink-libatomic"

    name: ${{ matrix.name }} ${{ matrix.arch_type }}

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact - musl-cross-make
        uses: actions/download-artifact@v3
        with:
          name: musl-cross-make-archive
          path: musl-cross-make-artifact-archive

      - name: Unpack musl-cross-make artifact
        run: tar -xf musl-cross-make-artifact-archive/musl-cross-make.tar.gz --strip-components 1 -C "$PWD"

      - name: apk install build deps
        run: >
          apk add autoconf automake bash bison build-base
          cmake ccache curl findutils flex git graphviz libarchive-tools libtool linux-headers ncurses-dev
          patch perl pkgconf python3 python3-dev re2c rsync tar texinfo ttf-freefont xz zip

      - name: Set ${{ matrix.arch_type }} musl to ${{ matrix.arch_config }}
        run: sed "s|COMMON_CONFIG += --disable-gprofng|COMMON_CONFIG += ${{ matrix.arch_config }} --disable-gprofng|" -i custom/config.mak

      - name: Copy updated config.mak to build directory
        run: cp -rf custom/. "$PWD"

      - name: install ${{ matrix.arch_type }} toolchain
        run: make -j"$(nproc)" install TARGET="${{ matrix.arch_type }}" OUTPUT="$(pwd)/build/${{ matrix.arch_type }}"

      - name: archive ${{ matrix.arch_type }} toolchain
        run: |
          cd "$(pwd)/build"
          XZ_OPT=-9T0 tar -cvJf ${{ matrix.arch_type }}.tar.xz ${{ matrix.arch_type }}/

      - name: Docker - upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "qbt-musl-cross-make"
          path: "build/${{ matrix.arch_type }}.tar.xz"

  release:
    name: Upload artifacts to release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    if: always() && contains(needs.*.result, 'success') && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    env:
      GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Host - Download artifacts
        uses: actions/download-artifact@v3

      - name: set release info from custom/versions.mak
        run: cp -f custom/versions.mak release_body.md

      - name: set tag via date
        run: echo "github_tag=$(date +"%y%V")" >> $GITHUB_ENV

      - name: Create release - tag - assets
        uses: ncipollo/release-action@v1
        with:
          prerelease: false
          artifacts: "qbt-musl-cross-make/*.tar.xz,custom/versions.json"
          replacesArtifacts: true
          tag: "${{ env.github_tag }}"
          name: "musl-cross-make toolchains"
          bodyFile: release_body.md
          allowUpdates: true
